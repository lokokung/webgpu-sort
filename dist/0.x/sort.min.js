!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).webgpuSort={})}(this,(function(e){"use strict";function t(e,t,n,r){if("a"===n&&!r)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!r:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===n?r:"a"===n?r.call(e):r?r.value:t.get(e)}class n{constructor(){}get isAstNode(){return!0}get astNodeType(){return""}}class r extends n{constructor(){super()}}class s extends r{constructor(e,t,n,r){super(),this.name=e,this.args=t,this.returnType=n,this.body=r}get astNodeType(){return"function"}}class o extends r{constructor(e){super(),this.expression=e}get astNodeType(){return"staticAssert"}}class i extends r{constructor(e,t){super(),this.condition=e,this.body=t}get astNodeType(){return"while"}}class a extends r{constructor(e,t,n,r){super(),this.init=e,this.condition=t,this.increment=n,this.body=r}get astNodeType(){return"for"}}class u extends r{constructor(e,t,n,r,s){super(),this.name=e,this.type=t,this.storage=n,this.access=r,this.value=s}get astNodeType(){return"var"}}class c extends r{constructor(e,t,n,r,s){super(),this.name=e,this.type=t,this.storage=n,this.access=r,this.value=s}get astNodeType(){return"let"}}class _ extends r{constructor(e,t,n,r,s){super(),this.name=e,this.type=t,this.storage=n,this.access=r,this.value=s}get astNodeType(){return"const"}}var l,h,d,p;!function(e){e.increment="++",e.decrement="--"}(l||(l={})),function(e){e.parse=function(t){const n=t;if("parse"==n)throw new Error("Invalid value for IncrementOperator");return e[n]}}(l||(l={}));class m extends r{constructor(e,t){super(),this.operator=e,this.variable=t}get astNodeType(){return"increment"}}!function(e){e.assign="=",e.addAssign="+=",e.subtractAssin="-=",e.multiplyAssign="*=",e.divideAssign="/=",e.moduloAssign="%=",e.andAssign="&=",e.orAssign="|=",e.xorAssign="^=",e.shiftLeftAssign="<<=",e.shiftRightAssign=">>="}(h||(h={})),function(e){e.parse=function(t){const n=t;if("parse"==n)throw new Error("Invalid value for AssignOperator");return e[n]}}(h||(h={}));class f extends r{constructor(e,t,n){super(),this.operator=e,this.variable=t,this.value=n}get astNodeType(){return"assign"}}class y extends r{constructor(e,t){super(),this.name=e,this.args=t}get astNodeType(){return"call"}}class g extends r{constructor(e,t){super(),this.body=e,this.continuing=t}get astNodeType(){return"loop"}}class k extends r{constructor(e,t){super(),this.condition=e,this.body=t}get astNodeType(){return"body"}}class w extends r{constructor(e,t,n,r){super(),this.condition=e,this.body=t,this.elseif=n,this.else=r}get astNodeType(){return"if"}}class x extends r{constructor(e){super(),this.value=e}get astNodeType(){return"return"}}class b extends r{constructor(e,t){super(),this.name=e,this.members=t}get astNodeType(){return"struct"}}class v extends r{constructor(e){super(),this.name=e}get astNodeType(){return"enable"}}class E extends r{constructor(e,t){super(),this.name=e,this.type=t}get astNodeType(){return"alias"}}class A extends r{constructor(){super()}get astNodeType(){return"discard"}}class S extends r{constructor(){super()}get astNodeType(){return"break"}}class T extends r{constructor(){super()}get astNodeType(){return"continue"}}class N extends n{constructor(e){super(),this.name=e}get astNodeType(){return"type"}}class q extends N{constructor(e,t,n){super(e),this.format=t,this.access=n}get astNodeType(){return"template"}}class z extends N{constructor(e,t,n,r){super(e),this.storage=t,this.type=n,this.access=r}get astNodeType(){return"pointer"}}class I extends N{constructor(e,t,n,r){super(e),this.attributes=t,this.format=n,this.count=r}get astNodeType(){return"array"}}class $ extends N{constructor(e,t,n){super(e),this.format=t,this.access=n}get astNodeType(){return"sampler"}}class P extends n{constructor(){super()}}class B extends P{constructor(e){super(),this.value=e}get astNodeType(){return"stringExpr"}toString(){return this.value}}class C extends P{constructor(e,t){super(),this.type=e,this.args=t}get astNodeType(){return"createExpr"}}class U extends P{constructor(e,t){super(),this.name=e,this.args=t}get astNodeType(){return"callExpr"}}class G extends P{constructor(e){super(),this.name=e}get astNodeType(){return"varExpr"}}class M extends P{constructor(e){super(),this.value=e}get astNodeType(){return"literalExpr"}}class O extends P{constructor(e,t){super(),this.type=e,this.value=t}get astNodeType(){return"bitcastExpr"}}class V extends P{constructor(e,t){super(),this.type=e,this.args=t}get astNodeType(){return"typecastExpr"}}class F extends P{constructor(e){super(),this.contents=e}get astNodeType(){return"groupExpr"}}class W extends P{constructor(){super()}}class L extends W{constructor(e,t){super(),this.operator=e,this.right=t}get astNodeType(){return"unaryOp"}}class j extends W{constructor(e,t,n){super(),this.operator=e,this.left=t,this.right=n}get astNodeType(){return"binaryOp"}}class R extends n{constructor(){super()}}class K extends R{constructor(e,t){super(),this.selector=e,this.body=t}get astNodeType(){return"case"}}class D extends R{constructor(e){super(),this.body=e}get astNodeType(){return"default"}}class X extends n{constructor(e,t,n){super(),this.name=e,this.type=t,this.attributes=n}get astNodeType(){return"argument"}}class Y extends n{constructor(e,t){super(),this.condition=e,this.body=t}get astNodeType(){return"elseif"}}class Z extends n{constructor(e,t,n){super(),this.name=e,this.type=t,this.attributes=n}get astNodeType(){return"member"}}class H extends n{constructor(e,t){super(),this.name=e,this.value=t}get astNodeType(){return"attribute"}}!function(e){e[e.token=0]="token",e[e.keyword=1]="keyword",e[e.reserved=2]="reserved"}(p||(p={}));class J{constructor(e,t,n){this.name=e,this.type=t,this.rule=n}toString(){return this.name}}class Q{}d=Q,Q.none=new J("",p.reserved,""),Q.eof=new J("EOF",p.token,""),Q.reserved={asm:new J("asm",p.reserved,"asm"),bf16:new J("bf16",p.reserved,"bf16"),do:new J("do",p.reserved,"do"),enum:new J("enum",p.reserved,"enum"),f16:new J("f16",p.reserved,"f16"),f64:new J("f64",p.reserved,"f64"),handle:new J("handle",p.reserved,"handle"),i8:new J("i8",p.reserved,"i8"),i16:new J("i16",p.reserved,"i16"),i64:new J("i64",p.reserved,"i64"),mat:new J("mat",p.reserved,"mat"),premerge:new J("premerge",p.reserved,"premerge"),regardless:new J("regardless",p.reserved,"regardless"),typedef:new J("typedef",p.reserved,"typedef"),u8:new J("u8",p.reserved,"u8"),u16:new J("u16",p.reserved,"u16"),u64:new J("u64",p.reserved,"u64"),unless:new J("unless",p.reserved,"unless"),using:new J("using",p.reserved,"using"),vec:new J("vec",p.reserved,"vec"),void:new J("void",p.reserved,"void")},Q.keywords={array:new J("array",p.keyword,"array"),atomic:new J("atomic",p.keyword,"atomic"),bool:new J("bool",p.keyword,"bool"),f32:new J("f32",p.keyword,"f32"),i32:new J("i32",p.keyword,"i32"),mat2x2:new J("mat2x2",p.keyword,"mat2x2"),mat2x3:new J("mat2x3",p.keyword,"mat2x3"),mat2x4:new J("mat2x4",p.keyword,"mat2x4"),mat3x2:new J("mat3x2",p.keyword,"mat3x2"),mat3x3:new J("mat3x3",p.keyword,"mat3x3"),mat3x4:new J("mat3x4",p.keyword,"mat3x4"),mat4x2:new J("mat4x2",p.keyword,"mat4x2"),mat4x3:new J("mat4x3",p.keyword,"mat4x3"),mat4x4:new J("mat4x4",p.keyword,"mat4x4"),ptr:new J("ptr",p.keyword,"ptr"),sampler:new J("sampler",p.keyword,"sampler"),sampler_comparison:new J("sampler_comparison",p.keyword,"sampler_comparison"),struct:new J("struct",p.keyword,"struct"),texture_1d:new J("texture_1d",p.keyword,"texture_1d"),texture_2d:new J("texture_2d",p.keyword,"texture_2d"),texture_2d_array:new J("texture_2d_array",p.keyword,"texture_2d_array"),texture_3d:new J("texture_3d",p.keyword,"texture_3d"),texture_cube:new J("texture_cube",p.keyword,"texture_cube"),texture_cube_array:new J("texture_cube_array",p.keyword,"texture_cube_array"),texture_multisampled_2d:new J("texture_multisampled_2d",p.keyword,"texture_multisampled_2d"),texture_storage_1d:new J("texture_storage_1d",p.keyword,"texture_storage_1d"),texture_storage_2d:new J("texture_storage_2d",p.keyword,"texture_storage_2d"),texture_storage_2d_array:new J("texture_storage_2d_array",p.keyword,"texture_storage_2d_array"),texture_storage_3d:new J("texture_storage_3d",p.keyword,"texture_storage_3d"),texture_depth_2d:new J("texture_depth_2d",p.keyword,"texture_depth_2d"),texture_depth_2d_array:new J("texture_depth_2d_array",p.keyword,"texture_depth_2d_array"),texture_depth_cube:new J("texture_depth_cube",p.keyword,"texture_depth_cube"),texture_depth_cube_array:new J("texture_depth_cube_array",p.keyword,"texture_depth_cube_array"),texture_depth_multisampled_2d:new J("texture_depth_multisampled_2d",p.keyword,"texture_depth_multisampled_2d"),u32:new J("u32",p.keyword,"u32"),vec2:new J("vec2",p.keyword,"vec2"),vec3:new J("vec3",p.keyword,"vec3"),vec4:new J("vec4",p.keyword,"vec4"),bitcast:new J("bitcast",p.keyword,"bitcast"),block:new J("block",p.keyword,"block"),break:new J("break",p.keyword,"break"),case:new J("case",p.keyword,"case"),continue:new J("continue",p.keyword,"continue"),continuing:new J("continuing",p.keyword,"continuing"),default:new J("default",p.keyword,"default"),discard:new J("discard",p.keyword,"discard"),else:new J("else",p.keyword,"else"),elseif:new J("elseif",p.keyword,"elseif"),enable:new J("enable",p.keyword,"enable"),fallthrough:new J("fallthrough",p.keyword,"fallthrough"),false:new J("false",p.keyword,"false"),fn:new J("fn",p.keyword,"fn"),for:new J("for",p.keyword,"for"),function:new J("function",p.keyword,"function"),if:new J("if",p.keyword,"if"),let:new J("let",p.keyword,"let"),const:new J("const",p.keyword,"const"),loop:new J("loop",p.keyword,"loop"),while:new J("while",p.keyword,"while"),private:new J("private",p.keyword,"private"),read:new J("read",p.keyword,"read"),read_write:new J("read_write",p.keyword,"read_write"),return:new J("return",p.keyword,"return"),storage:new J("storage",p.keyword,"storage"),switch:new J("switch",p.keyword,"switch"),true:new J("true",p.keyword,"true"),type:new J("type",p.keyword,"type"),uniform:new J("uniform",p.keyword,"uniform"),var:new J("var",p.keyword,"var"),workgroup:new J("workgroup",p.keyword,"workgroup"),write:new J("write",p.keyword,"write"),r8unorm:new J("r8unorm",p.keyword,"r8unorm"),r8snorm:new J("r8snorm",p.keyword,"r8snorm"),r8uint:new J("r8uint",p.keyword,"r8uint"),r8sint:new J("r8sint",p.keyword,"r8sint"),r16uint:new J("r16uint",p.keyword,"r16uint"),r16sint:new J("r16sint",p.keyword,"r16sint"),r16float:new J("r16float",p.keyword,"r16float"),rg8unorm:new J("rg8unorm",p.keyword,"rg8unorm"),rg8snorm:new J("rg8snorm",p.keyword,"rg8snorm"),rg8uint:new J("rg8uint",p.keyword,"rg8uint"),rg8sint:new J("rg8sint",p.keyword,"rg8sint"),r32uint:new J("r32uint",p.keyword,"r32uint"),r32sint:new J("r32sint",p.keyword,"r32sint"),r32float:new J("r32float",p.keyword,"r32float"),rg16uint:new J("rg16uint",p.keyword,"rg16uint"),rg16sint:new J("rg16sint",p.keyword,"rg16sint"),rg16float:new J("rg16float",p.keyword,"rg16float"),rgba8unorm:new J("rgba8unorm",p.keyword,"rgba8unorm"),rgba8unorm_srgb:new J("rgba8unorm_srgb",p.keyword,"rgba8unorm_srgb"),rgba8snorm:new J("rgba8snorm",p.keyword,"rgba8snorm"),rgba8uint:new J("rgba8uint",p.keyword,"rgba8uint"),rgba8sint:new J("rgba8sint",p.keyword,"rgba8sint"),bgra8unorm:new J("bgra8unorm",p.keyword,"bgra8unorm"),bgra8unorm_srgb:new J("bgra8unorm_srgb",p.keyword,"bgra8unorm_srgb"),rgb10a2unorm:new J("rgb10a2unorm",p.keyword,"rgb10a2unorm"),rg11b10float:new J("rg11b10float",p.keyword,"rg11b10float"),rg32uint:new J("rg32uint",p.keyword,"rg32uint"),rg32sint:new J("rg32sint",p.keyword,"rg32sint"),rg32float:new J("rg32float",p.keyword,"rg32float"),rgba16uint:new J("rgba16uint",p.keyword,"rgba16uint"),rgba16sint:new J("rgba16sint",p.keyword,"rgba16sint"),rgba16float:new J("rgba16float",p.keyword,"rgba16float"),rgba32uint:new J("rgba32uint",p.keyword,"rgba32uint"),rgba32sint:new J("rgba32sint",p.keyword,"rgba32sint"),rgba32float:new J("rgba32float",p.keyword,"rgba32float"),static_assert:new J("static_assert",p.keyword,"static_assert")},Q.tokens={decimal_float_literal:new J("decimal_float_literal",p.token,/((-?[0-9]*\.[0-9]+|-?[0-9]+\.[0-9]*)((e|E)(\+|-)?[0-9]+)?f?)|(-?[0-9]+(e|E)(\+|-)?[0-9]+f?)/),hex_float_literal:new J("hex_float_literal",p.token,/-?0x((([0-9a-fA-F]*\.[0-9a-fA-F]+|[0-9a-fA-F]+\.[0-9a-fA-F]*)((p|P)(\+|-)?[0-9]+f?)?)|([0-9a-fA-F]+(p|P)(\+|-)?[0-9]+f?))/),int_literal:new J("int_literal",p.token,/-?0x[0-9a-fA-F]+|0|-?[1-9][0-9]*/),uint_literal:new J("uint_literal",p.token,/0x[0-9a-fA-F]+u|0u|[1-9][0-9]*u/),ident:new J("ident",p.token,/[a-zA-Z][0-9a-zA-Z_]*/),and:new J("and",p.token,"&"),and_and:new J("and_and",p.token,"&&"),arrow:new J("arrow ",p.token,"->"),attr:new J("attr",p.token,"@"),attr_left:new J("attr_left",p.token,"[["),attr_right:new J("attr_right",p.token,"]]"),forward_slash:new J("forward_slash",p.token,"/"),bang:new J("bang",p.token,"!"),bracket_left:new J("bracket_left",p.token,"["),bracket_right:new J("bracket_right",p.token,"]"),brace_left:new J("brace_left",p.token,"{"),brace_right:new J("brace_right",p.token,"}"),colon:new J("colon",p.token,":"),comma:new J("comma",p.token,","),equal:new J("equal",p.token,"="),equal_equal:new J("equal_equal",p.token,"=="),not_equal:new J("not_equal",p.token,"!="),greater_than:new J("greater_than",p.token,">"),greater_than_equal:new J("greater_than_equal",p.token,">="),shift_right:new J("shift_right",p.token,">>"),less_than:new J("less_than",p.token,"<"),less_than_equal:new J("less_than_equal",p.token,"<="),shift_left:new J("shift_left",p.token,"<<"),modulo:new J("modulo",p.token,"%"),minus:new J("minus",p.token,"-"),minus_minus:new J("minus_minus",p.token,"--"),period:new J("period",p.token,"."),plus:new J("plus",p.token,"+"),plus_plus:new J("plus_plus",p.token,"++"),or:new J("or",p.token,"|"),or_or:new J("or_or",p.token,"||"),paren_left:new J("paren_left",p.token,"("),paren_right:new J("paren_right",p.token,")"),semicolon:new J("semicolon",p.token,";"),star:new J("star",p.token,"*"),tilde:new J("tilde",p.token,"~"),underscore:new J("underscore",p.token,"_"),xor:new J("xor",p.token,"^"),plus_equal:new J("plus_equal",p.token,"+="),minus_equal:new J("minus_equal",p.token,"-="),times_equal:new J("times_equal",p.token,"*="),division_equal:new J("division_equal",p.token,"/="),modulo_equal:new J("modulo_equal",p.token,"%="),and_equal:new J("and_equal",p.token,"&="),or_equal:new J("or_equal",p.token,"|="),xor_equal:new J("xor_equal",p.token,"^="),shift_right_equal:new J("shift_right_equal",p.token,">>="),shift_left_equal:new J("shift_left_equal",p.token,"<<=")},Q.storage_class=[d.keywords.function,d.keywords.private,d.keywords.workgroup,d.keywords.uniform,d.keywords.storage],Q.access_mode=[d.keywords.read,d.keywords.write,d.keywords.read_write],Q.sampler_type=[d.keywords.sampler,d.keywords.sampler_comparison],Q.sampled_texture_type=[d.keywords.texture_1d,d.keywords.texture_2d,d.keywords.texture_2d_array,d.keywords.texture_3d,d.keywords.texture_cube,d.keywords.texture_cube_array],Q.multisampled_texture_type=[d.keywords.texture_multisampled_2d],Q.storage_texture_type=[d.keywords.texture_storage_1d,d.keywords.texture_storage_2d,d.keywords.texture_storage_2d_array,d.keywords.texture_storage_3d],Q.depth_texture_type=[d.keywords.texture_depth_2d,d.keywords.texture_depth_2d_array,d.keywords.texture_depth_cube,d.keywords.texture_depth_cube_array,d.keywords.texture_depth_multisampled_2d],Q.any_texture_type=[...d.sampled_texture_type,...d.multisampled_texture_type,...d.storage_texture_type,...d.depth_texture_type],Q.texel_format=[d.keywords.r8unorm,d.keywords.r8snorm,d.keywords.r8uint,d.keywords.r8sint,d.keywords.r16uint,d.keywords.r16sint,d.keywords.r16float,d.keywords.rg8unorm,d.keywords.rg8snorm,d.keywords.rg8uint,d.keywords.rg8sint,d.keywords.r32uint,d.keywords.r32sint,d.keywords.r32float,d.keywords.rg16uint,d.keywords.rg16sint,d.keywords.rg16float,d.keywords.rgba8unorm,d.keywords.rgba8unorm_srgb,d.keywords.rgba8snorm,d.keywords.rgba8uint,d.keywords.rgba8sint,d.keywords.bgra8unorm,d.keywords.bgra8unorm_srgb,d.keywords.rgb10a2unorm,d.keywords.rg11b10float,d.keywords.rg32uint,d.keywords.rg32sint,d.keywords.rg32float,d.keywords.rgba16uint,d.keywords.rgba16sint,d.keywords.rgba16float,d.keywords.rgba32uint,d.keywords.rgba32sint,d.keywords.rgba32float],Q.const_literal=[d.tokens.int_literal,d.tokens.uint_literal,d.tokens.decimal_float_literal,d.tokens.hex_float_literal,d.keywords.true,d.keywords.false],Q.literal_or_ident=[d.tokens.ident,d.tokens.int_literal,d.tokens.uint_literal,d.tokens.decimal_float_literal,d.tokens.hex_float_literal],Q.element_count_expression=[d.tokens.int_literal,d.tokens.uint_literal,d.tokens.ident],Q.template_types=[d.keywords.vec2,d.keywords.vec3,d.keywords.vec4,d.keywords.mat2x2,d.keywords.mat2x3,d.keywords.mat2x4,d.keywords.mat3x2,d.keywords.mat3x3,d.keywords.mat3x4,d.keywords.mat4x2,d.keywords.mat4x3,d.keywords.mat4x4,d.keywords.atomic,d.keywords.bitcast,...d.any_texture_type],Q.attribute_name=[d.tokens.ident,d.keywords.block],Q.assignment_operators=[d.tokens.equal,d.tokens.plus_equal,d.tokens.minus_equal,d.tokens.times_equal,d.tokens.division_equal,d.tokens.modulo_equal,d.tokens.and_equal,d.tokens.or_equal,d.tokens.xor_equal,d.tokens.shift_right_equal,d.tokens.shift_left_equal],Q.increment_operators=[d.tokens.plus_plus,d.tokens.minus_minus];class ee{constructor(e,t,n){this.type=e,this.lexeme=t,this.line=n}toString(){return this.lexeme}}class te{constructor(e){this._tokens=[],this._start=0,this._current=0,this._line=1,this._source=null!=e?e:""}scanTokens(){for(;!this._isAtEnd();)if(this._start=this._current,!this.scanToken())throw`Invalid syntax at line ${this._line}`;return this._tokens.push(new ee(Q.eof,"",this._line)),this._tokens}scanToken(){let e=this._advance();if("\n"==e)return this._line++,!0;if(this._isWhitespace(e))return!0;if("/"==e){if("/"==this._peekAhead()){for(;"\n"!=e;){if(this._isAtEnd())return!0;e=this._advance()}return this._line++,!0}if("*"==this._peekAhead()){this._advance();let t=1;for(;t>0;){if(this._isAtEnd())return!0;if(e=this._advance(),"\n"==e)this._line++;else if("*"==e){if("/"==this._peekAhead()&&(this._advance(),t--,0==t))return!0}else"/"==e&&"*"==this._peekAhead()&&(this._advance(),t++)}return!0}}let t=Q.none;for(;;){let n=this._findType(e);if(">"==e&&">"==this._peekAhead()){let e=!1,t=this._tokens.length-1;for(let n=0;n<4&&t>=0;++n,--t)if(this._tokens[t].type===Q.tokens.less_than){t>0&&-1!=Q.template_types.indexOf(this._tokens[t-1].type)&&(e=!0);break}if(e)return this._addToken(n),!0}if(n===Q.none){let r=e,s=0;const o=2;for(let e=0;e<o;++e)if(r+=this._peekAhead(e),n=this._findType(r),n!==Q.none){s=e;break}if(n===Q.none)return t!==Q.none&&(this._current--,this._addToken(t),!0);e=r,this._current+=s+1}if(t=n,this._isAtEnd())break;e+=this._advance()}return t!==Q.none&&(this._addToken(t),!0)}_findType(e){for(const t in Q.keywords){const n=Q.keywords[t];if(this._match(e,n.rule))return n}for(const t in Q.tokens){const n=Q.tokens[t];if(this._match(e,n.rule))return n}return Q.none}_match(e,t){if("string"==typeof t){if(t==e)return!0}else{const n=t.exec(e);if(n&&0==n.index&&n[0]==e)return!0}return!1}_isAtEnd(){return this._current>=this._source.length}_isWhitespace(e){return" "==e||"\t"==e||"\r"==e}_advance(e=0){let t=this._source[this._current];return e=e||0,e++,this._current+=e,t}_peekAhead(e=0){return e=e||0,this._current+e>=this._source.length?"\0":this._source[this._current+e]}_addToken(e){const t=this._source.substring(this._start,this._current);this._tokens.push(new ee(e,t,this._line))}}class ne{constructor(){this._tokens=[],this._current=0}parse(e){this._initialize(e);let t=[];for(;!this._isAtEnd();){const e=this._global_decl_or_directive();if(!e)break;t.push(e)}return t}_initialize(e){if(e)if("string"==typeof e){const t=new te(e);this._tokens=t.scanTokens()}else this._tokens=e;else this._tokens=[];this._current=0}_error(e,t){return console.error(e,t),{token:e,message:t,toString:function(){return`${t}`}}}_isAtEnd(){return this._current>=this._tokens.length||this._peek().type==Q.eof}_match(e){if(e instanceof J)return!!this._check(e)&&(this._advance(),!0);for(let t=0,n=e.length;t<n;++t){const n=e[t];if(this._check(n))return this._advance(),!0}return!1}_consume(e,t){if(this._check(e))return this._advance();throw this._error(this._peek(),t)}_check(e){if(this._isAtEnd())return!1;const t=this._peek();if(e instanceof Array){let n=t.type;return-1!=e.indexOf(n)}return t.type==e}_advance(){return this._isAtEnd()||this._current++,this._previous()}_peek(){return this._tokens[this._current]}_previous(){return this._tokens[this._current-1]}_global_decl_or_directive(){for(;this._match(Q.tokens.semicolon)&&!this._isAtEnd(););if(this._match(Q.keywords.type)){const e=this._type_alias();return this._consume(Q.tokens.semicolon,"Expected ';'"),e}if(this._match(Q.keywords.enable)){const e=this._enable_directive();return this._consume(Q.tokens.semicolon,"Expected ';'"),e}const e=this._attribute();if(this._check(Q.keywords.var)){const t=this._global_variable_decl();return null!=t&&(t.attributes=e),this._consume(Q.tokens.semicolon,"Expected ';'."),t}if(this._check(Q.keywords.let)){const t=this._global_constant_decl();return null!=t&&(t.attributes=e),this._consume(Q.tokens.semicolon,"Expected ';'."),t}if(this._check(Q.keywords.struct)){const t=this._struct_decl();return null!=t&&(t.attributes=e),t}if(this._check(Q.keywords.fn)){const t=this._function_decl();return null!=t&&(t.attributes=e),t}return null}_function_decl(){if(!this._match(Q.keywords.fn))return null;const e=this._consume(Q.tokens.ident,"Expected function name.").toString();this._consume(Q.tokens.paren_left,"Expected '(' for function arguments.");const t=[];if(!this._check(Q.tokens.paren_right))do{if(this._check(Q.tokens.paren_right))break;const e=this._attribute(),n=this._consume(Q.tokens.ident,"Expected argument name.").toString();this._consume(Q.tokens.colon,"Expected ':' for argument type.");const r=this._attribute(),s=this._type_decl();null!=s&&(s.attributes=r,t.push(new X(n,s,e)))}while(this._match(Q.tokens.comma));this._consume(Q.tokens.paren_right,"Expected ')' after function arguments.");let n=null;if(this._match(Q.tokens.arrow)){const e=this._attribute();n=this._type_decl(),null!=n&&(n.attributes=e)}const r=this._compound_statement();return new s(e,t,n,r)}_compound_statement(){const e=[];for(this._consume(Q.tokens.brace_left,"Expected '{' for block.");!this._check(Q.tokens.brace_right);){const t=this._statement();null!==t&&e.push(t)}return this._consume(Q.tokens.brace_right,"Expected '}' for block."),e}_statement(){for(;this._match(Q.tokens.semicolon)&&!this._isAtEnd(););if(this._check(Q.keywords.if))return this._if_statement();if(this._check(Q.keywords.switch))return this._switch_statement();if(this._check(Q.keywords.loop))return this._loop_statement();if(this._check(Q.keywords.for))return this._for_statement();if(this._check(Q.keywords.while))return this._while_statement();if(this._check(Q.keywords.static_assert))return this._static_assert_statement();if(this._check(Q.tokens.brace_left))return this._compound_statement();let e=null;return e=this._check(Q.keywords.return)?this._return_statement():this._check([Q.keywords.var,Q.keywords.let,Q.keywords.const])?this._variable_statement():this._match(Q.keywords.discard)?new A:this._match(Q.keywords.break)?new S:this._match(Q.keywords.continue)?new T:this._increment_decrement_statement()||this._func_call_statement()||this._assignment_statement(),null!=e&&this._consume(Q.tokens.semicolon,"Expected ';' after statement."),e}_static_assert_statement(){if(!this._match(Q.keywords.static_assert))return null;let e=this._optional_paren_expression();return new o(e)}_while_statement(){if(!this._match(Q.keywords.while))return null;let e=this._optional_paren_expression();const t=this._compound_statement();return new i(e,t)}_for_statement(){if(!this._match(Q.keywords.for))return null;this._consume(Q.tokens.paren_left,"Expected '('.");const e=this._check(Q.tokens.semicolon)?null:this._for_init();this._consume(Q.tokens.semicolon,"Expected ';'.");const t=this._check(Q.tokens.semicolon)?null:this._short_circuit_or_expression();this._consume(Q.tokens.semicolon,"Expected ';'.");const n=this._check(Q.tokens.paren_right)?null:this._for_increment();this._consume(Q.tokens.paren_right,"Expected ')'.");const r=this._compound_statement();return new a(e,t,n,r)}_for_init(){return this._variable_statement()||this._func_call_statement()||this._assignment_statement()}_for_increment(){return this._func_call_statement()||this._increment_decrement_statement()||this._assignment_statement()}_variable_statement(){if(this._check(Q.keywords.var)){const e=this._variable_decl();if(null===e)throw this._error(this._peek(),"Variable declaration expected.");let t=null;return this._match(Q.tokens.equal)&&(t=this._short_circuit_or_expression()),new u(e.name,e.type,e.storage,e.access,t)}if(this._match(Q.keywords.let)){const e=this._consume(Q.tokens.ident,"Expected name for let.").toString();let t=null;if(this._match(Q.tokens.colon)){const e=this._attribute();t=this._type_decl(),null!=t&&(t.attributes=e)}this._consume(Q.tokens.equal,"Expected '=' for let.");const n=this._short_circuit_or_expression();return new c(e,t,null,null,n)}if(this._match(Q.keywords.const)){const e=this._consume(Q.tokens.ident,"Expected name for const.").toString();let t=null;if(this._match(Q.tokens.colon)){const e=this._attribute();t=this._type_decl(),null!=t&&(t.attributes=e)}this._consume(Q.tokens.equal,"Expected '=' for const.");const n=this._short_circuit_or_expression();return new _(e,t,null,null,n)}return null}_increment_decrement_statement(){const e=this._current,t=this._unary_expression();if(null==t)return null;if(!this._check(Q.increment_operators))return this._current=e,null;const n=this._consume(Q.increment_operators,"Expected increment operator");return new m(n.type===Q.tokens.plus_plus?l.increment:l.decrement,t)}_assignment_statement(){let e=null;if(this._check(Q.tokens.brace_right))return null;let t=this._match(Q.tokens.underscore);if(t||(e=this._unary_expression()),!t&&null==e)return null;const n=this._consume(Q.assignment_operators,"Expected assignment operator."),r=this._short_circuit_or_expression();return new f(h.parse(n.lexeme),e,r)}_func_call_statement(){if(!this._check(Q.tokens.ident))return null;const e=this._current,t=this._consume(Q.tokens.ident,"Expected function name."),n=this._argument_expression_list();return null===n?(this._current=e,null):new y(t.lexeme,n)}_loop_statement(){if(!this._match(Q.keywords.loop))return null;this._consume(Q.tokens.brace_left,"Expected '{' for loop.");const e=[];let t=this._statement();for(;null!==t;){if(t instanceof Array)for(let n of t)e.push(n);else e.push(t);t=this._statement()}let n=null;return this._match(Q.keywords.continuing)&&(n=this._compound_statement()),this._consume(Q.tokens.brace_right,"Expected '}' for loop."),new g(e,n)}_switch_statement(){if(!this._match(Q.keywords.switch))return null;const e=this._optional_paren_expression();this._consume(Q.tokens.brace_left,"Expected '{' for switch.");const t=this._switch_body();if(null==t||0==t.length)throw this._error(this._previous(),"Expected 'case' or 'default'.");return this._consume(Q.tokens.brace_right,"Expected '}' for switch."),new k(e,t)}_switch_body(){const e=[];if(this._match(Q.keywords.case)){const t=this._case_selectors();this._consume(Q.tokens.colon,"Exected ':' for switch case."),this._consume(Q.tokens.brace_left,"Exected '{' for switch case.");const n=this._case_body();this._consume(Q.tokens.brace_right,"Exected '}' for switch case."),e.push(new K(t,n))}if(this._match(Q.keywords.default)){this._consume(Q.tokens.colon,"Exected ':' for switch default."),this._consume(Q.tokens.brace_left,"Exected '{' for switch default.");const t=this._case_body();this._consume(Q.tokens.brace_right,"Exected '}' for switch default."),e.push(new D(t))}if(this._check([Q.keywords.default,Q.keywords.case])){const t=this._switch_body();e.push(t[0])}return e}_case_selectors(){const e=[this._consume(Q.const_literal,"Expected constant literal").toString()];for(;this._match(Q.tokens.comma);)e.push(this._consume(Q.const_literal,"Expected constant literal").toString());return e}_case_body(){if(this._match(Q.keywords.fallthrough))return this._consume(Q.tokens.semicolon,"Expected ';'"),[];let e=this._statement();if(null==e)return[];e instanceof Array||(e=[e]);const t=this._case_body();return 0==t.length?e:[...e,t[0]]}_if_statement(){if(!this._match(Q.keywords.if))return null;const e=this._optional_paren_expression(),t=this._compound_statement();let n=null;this._match(Q.keywords.elseif)&&(n=this._elseif_statement());let r=null;return this._match(Q.keywords.else)&&(r=this._compound_statement()),new w(e,t,n,r)}_elseif_statement(){const e=[],t=this._optional_paren_expression(),n=this._compound_statement();return e.push(new Y(t,n)),this._match(Q.keywords.elseif)&&e.push(this._elseif_statement()[0]),e}_return_statement(){if(!this._match(Q.keywords.return))return null;const e=this._short_circuit_or_expression();return new x(e)}_short_circuit_or_expression(){let e=this._short_circuit_and_expr();for(;this._match(Q.tokens.or_or);)e=new j(this._previous().toString(),e,this._short_circuit_and_expr());return e}_short_circuit_and_expr(){let e=this._inclusive_or_expression();for(;this._match(Q.tokens.and_and);)e=new j(this._previous().toString(),e,this._inclusive_or_expression());return e}_inclusive_or_expression(){let e=this._exclusive_or_expression();for(;this._match(Q.tokens.or);)e=new j(this._previous().toString(),e,this._exclusive_or_expression());return e}_exclusive_or_expression(){let e=this._and_expression();for(;this._match(Q.tokens.xor);)e=new j(this._previous().toString(),e,this._and_expression());return e}_and_expression(){let e=this._equality_expression();for(;this._match(Q.tokens.and);)e=new j(this._previous().toString(),e,this._equality_expression());return e}_equality_expression(){const e=this._relational_expression();return this._match([Q.tokens.equal_equal,Q.tokens.not_equal])?new j(this._previous().toString(),e,this._relational_expression()):e}_relational_expression(){let e=this._shift_expression();for(;this._match([Q.tokens.less_than,Q.tokens.greater_than,Q.tokens.less_than_equal,Q.tokens.greater_than_equal]);)e=new j(this._previous().toString(),e,this._shift_expression());return e}_shift_expression(){let e=this._additive_expression();for(;this._match([Q.tokens.shift_left,Q.tokens.shift_right]);)e=new j(this._previous().toString(),e,this._additive_expression());return e}_additive_expression(){let e=this._multiplicative_expression();for(;this._match([Q.tokens.plus,Q.tokens.minus]);)e=new j(this._previous().toString(),e,this._multiplicative_expression());return e}_multiplicative_expression(){let e=this._unary_expression();for(;this._match([Q.tokens.star,Q.tokens.forward_slash,Q.tokens.modulo]);)e=new j(this._previous().toString(),e,this._unary_expression());return e}_unary_expression(){return this._match([Q.tokens.minus,Q.tokens.bang,Q.tokens.tilde,Q.tokens.star,Q.tokens.and])?new L(this._previous().toString(),this._unary_expression()):this._singular_expression()}_singular_expression(){const e=this._primary_expression(),t=this._postfix_expression();return t&&(e.postfix=t),e}_postfix_expression(){if(this._match(Q.tokens.bracket_left)){const e=this._short_circuit_or_expression();this._consume(Q.tokens.bracket_right,"Expected ']'.");const t=this._postfix_expression();return t&&(e.postfix=t),e}if(this._match(Q.tokens.period)){const e=this._consume(Q.tokens.ident,"Expected member name."),t=this._postfix_expression(),n=new B(e.lexeme);return t&&(n.postfix=t),n}return null}_primary_expression(){if(this._match(Q.tokens.ident)){const e=this._previous().toString();if(this._check(Q.tokens.paren_left)){const t=this._argument_expression_list();return new U(e,t)}return new G(e)}if(this._match(Q.const_literal))return new M(this._previous().toString());if(this._check(Q.tokens.paren_left))return this._paren_expression();if(this._match(Q.keywords.bitcast)){this._consume(Q.tokens.less_than,"Expected '<'.");const e=this._type_decl();this._consume(Q.tokens.greater_than,"Expected '>'.");const t=this._paren_expression();return new O(e,t)}const e=this._type_decl(),t=this._argument_expression_list();return new V(e,t)}_argument_expression_list(){if(!this._match(Q.tokens.paren_left))return null;const e=[];do{if(this._check(Q.tokens.paren_right))break;const t=this._short_circuit_or_expression();e.push(t)}while(this._match(Q.tokens.comma));return this._consume(Q.tokens.paren_right,"Expected ')' for agument list"),e}_optional_paren_expression(){this._match(Q.tokens.paren_left);const e=this._short_circuit_or_expression();return this._match(Q.tokens.paren_right),new F([e])}_paren_expression(){this._consume(Q.tokens.paren_left,"Expected '('.");const e=this._short_circuit_or_expression();return this._consume(Q.tokens.paren_right,"Expected ')'."),new F([e])}_struct_decl(){if(!this._match(Q.keywords.struct))return null;const e=this._consume(Q.tokens.ident,"Expected name for struct.").toString();this._consume(Q.tokens.brace_left,"Expected '{' for struct body.");const t=[];for(;!this._check(Q.tokens.brace_right);){const e=this._attribute(),n=this._consume(Q.tokens.ident,"Expected variable name.").toString();this._consume(Q.tokens.colon,"Expected ':' for struct member type.");const r=this._attribute(),s=this._type_decl();null!=s&&(s.attributes=r),this._check(Q.tokens.brace_right)?this._match(Q.tokens.comma):this._consume(Q.tokens.comma,"Expected ',' for struct member."),t.push(new Z(n,s,e))}return this._consume(Q.tokens.brace_right,"Expected '}' after struct body."),new b(e,t)}_global_variable_decl(){const e=this._variable_decl();return e&&this._match(Q.tokens.equal)&&(e.value=this._const_expression()),e}_global_constant_decl(){if(!this._match(Q.keywords.let))return null;const e=this._consume(Q.tokens.ident,"Expected variable name");let t=null;if(this._match(Q.tokens.colon)){const e=this._attribute();t=this._type_decl(),null!=t&&(t.attributes=e)}let n=null;return this._match(Q.tokens.equal)&&(n=this._const_expression()),new c(e.toString(),t,"","",n)}_const_expression(){if(this._match(Q.const_literal))return new B(this._previous().toString());const e=this._type_decl();this._consume(Q.tokens.paren_left,"Expected '('.");let t=[];for(;!this._check(Q.tokens.paren_right)&&(t.push(this._const_expression()),this._check(Q.tokens.comma));)this._advance();return this._consume(Q.tokens.paren_right,"Expected ')'."),new C(e,t)}_variable_decl(){if(!this._match(Q.keywords.var))return null;let e="",t="";this._match(Q.tokens.less_than)&&(e=this._consume(Q.storage_class,"Expected storage_class.").toString(),this._match(Q.tokens.comma)&&(t=this._consume(Q.access_mode,"Expected access_mode.").toString()),this._consume(Q.tokens.greater_than,"Expected '>'."));const n=this._consume(Q.tokens.ident,"Expected variable name");let r=null;if(this._match(Q.tokens.colon)){const e=this._attribute();r=this._type_decl(),null!=r&&(r.attributes=e)}return new u(n.toString(),r,e,t,null)}_enable_directive(){const e=this._consume(Q.tokens.ident,"identity expected.");return new v(e.toString())}_type_alias(){const e=this._consume(Q.tokens.ident,"identity expected.");this._consume(Q.tokens.equal,"Expected '=' for type alias.");const t=this._type_decl();if(null===t)throw this._error(this._peek(),"Expected Type for Alias.");return new E(e.toString(),t)}_type_decl(){if(this._check([Q.tokens.ident,...Q.texel_format,Q.keywords.bool,Q.keywords.f32,Q.keywords.i32,Q.keywords.u32])){const e=this._advance();return new N(e.toString())}if(this._check(Q.template_types)){let e=this._advance().toString(),t=null,n=null;return this._match(Q.tokens.less_than)&&(t=this._type_decl(),n=null,this._match(Q.tokens.comma)&&(n=this._consume(Q.access_mode,"Expected access_mode for pointer").toString()),this._consume(Q.tokens.greater_than,"Expected '>' for type.")),new q(e,t,n)}if(this._match(Q.keywords.ptr)){let e=this._previous().toString();this._consume(Q.tokens.less_than,"Expected '<' for pointer.");const t=this._consume(Q.storage_class,"Expected storage_class for pointer");this._consume(Q.tokens.comma,"Expected ',' for pointer.");const n=this._type_decl();let r=null;return this._match(Q.tokens.comma)&&(r=this._consume(Q.access_mode,"Expected access_mode for pointer").toString()),this._consume(Q.tokens.greater_than,"Expected '>' for pointer."),new z(e,t.toString(),n,r)}let e=this._texture_sampler_types();if(e)return e;const t=this._attribute();if(this._match(Q.keywords.array)){const e=this._previous();this._consume(Q.tokens.less_than,"Expected '<' for array type.");const n=this._type_decl();let r="";this._match(Q.tokens.comma)&&(r=this._consume(Q.element_count_expression,"Expected element_count for array.").toString()),this._consume(Q.tokens.greater_than,"Expected '>' for array.");let s=r?parseInt(r):0;return new I(e.toString(),t,n,s)}return null}_texture_sampler_types(){if(this._match(Q.sampler_type))return new $(this._previous().toString(),null,null);if(this._match(Q.depth_texture_type))return new $(this._previous().toString(),null,null);if(this._match(Q.sampled_texture_type)||this._match(Q.multisampled_texture_type)){const e=this._previous();this._consume(Q.tokens.less_than,"Expected '<' for sampler type.");const t=this._type_decl();return this._consume(Q.tokens.greater_than,"Expected '>' for sampler type."),new $(e.toString(),t,null)}if(this._match(Q.storage_texture_type)){const e=this._previous();this._consume(Q.tokens.less_than,"Expected '<' for sampler type.");const t=this._consume(Q.texel_format,"Invalid texel format.").toString();this._consume(Q.tokens.comma,"Expected ',' after texel format.");const n=this._consume(Q.access_mode,"Expected access mode for storage texture type.").toString();return this._consume(Q.tokens.greater_than,"Expected '>' for sampler type."),new $(e.toString(),t,n)}return null}_attribute(){let e=[];for(;this._match(Q.tokens.attr);){const t=this._consume(Q.attribute_name,"Expected attribute name"),n=new H(t.toString(),null);if(this._match(Q.tokens.paren_left)){if(n.value=this._consume(Q.literal_or_ident,"Expected attribute value").toString(),this._check(Q.tokens.comma)){this._advance();do{const e=this._consume(Q.literal_or_ident,"Expected attribute value").toString();n.value instanceof Array||(n.value=[n.value]),n.value.push(e)}while(this._match(Q.tokens.comma))}this._consume(Q.tokens.paren_right,"Expected ')'")}e.push(n)}for(;this._match(Q.tokens.attr_left);){if(!this._check(Q.tokens.attr_right))do{const t=this._consume(Q.attribute_name,"Expected attribute name"),n=new H(t.toString(),null);if(this._match(Q.tokens.paren_left)){if(n.value=[this._consume(Q.literal_or_ident,"Expected attribute value").toString()],this._check(Q.tokens.comma)){this._advance();do{const e=this._consume(Q.literal_or_ident,"Expected attribute value").toString();n.value.push(e)}while(this._match(Q.tokens.comma))}this._consume(Q.tokens.paren_right,"Expected ')'")}e.push(n)}while(this._match(Q.tokens.comma));this._consume(Q.tokens.attr_right,"Expected ']]' after attribute declarations")}return 0==e.length?null:e}}class re{constructor(e,t,n){this.group=t,this.binding=n,this.node=e}get name(){return this.node.name}get type(){return this.node.type}get attributes(){return this.node.attributes}}class se{constructor(e){this.inputs=[],this.node=e}get name(){return this.node.name}get returnType(){return this.node.returnType}get args(){return this.node.args}get attributes(){return this.node.attributes}}class oe{constructor(e,t,n,r,s){this.name=e,this.type=t,this.input=n,this.locationType=r,this.location=s,this.interpolation=this.interpolation}}class ie{}class ae{constructor(e,t){this.align=e,this.size=t}}class ue extends ae{constructor(e,t){super(0,0),this.name=e,this.type=t}}class ce{constructor(e,t){this.type=e,this.resource=t}}class _e{constructor(){this.vertex=[],this.fragment=[],this.compute=[]}}class le{constructor(e){this.structs=[],this.uniforms=[],this.storage=[],this.textures=[],this.samplers=[],this.functions=[],this.aliases=[],e&&this.initialize(e)}initialize(e){const t=new ne;this.ast=t.parse(e),this.entry=new _e;for(const e of this.ast){if("struct"==e.astNodeType&&this.structs.push(e),"alias"==e.astNodeType&&this.aliases.push(e),this.isUniformVar(e)){const t=e,n=this.getAttributeNum(e,"group",0),r=this.getAttributeNum(e,"binding",0);this.uniforms.push(new re(t,n,r))}if(this.isStorageVar(e)){const t=e,n=this.getAttributeNum(e,"group",0),r=this.getAttributeNum(e,"binding",0);this.storage.push(new re(t,n,r))}if(this.isTextureVar(e)){const t=e,n=this.getAttributeNum(e,"group",0),r=this.getAttributeNum(e,"binding",0);this.textures.push(new re(t,n,r))}if(this.isSamplerVar(e)){const t=e,n=this.getAttributeNum(e,"group",0),r=this.getAttributeNum(e,"binding",0);this.samplers.push(new re(t,n,r))}if(e instanceof s){const t=new se(e);t.inputs=this._getInputs(e.args),this.functions.push(t);const n=this.getAttribute(e,"vertex"),r=this.getAttribute(e,"fragment"),s=this.getAttribute(e,"compute"),o=n||r||s;o&&this.entry[o.name].push(t)}}}isTextureVar(e){return e instanceof u&&null!==e.type&&-1!=le.textureTypes.indexOf(e.type.name)}isSamplerVar(e){return e instanceof u&&null!==e.type&&-1!=le.samplerTypes.indexOf(e.type.name)}isUniformVar(e){return e instanceof u&&"uniform"==e.storage}isStorageVar(e){return e instanceof u&&"storage"==e.storage}getAttributeNum(e,t,n){const r=this.getAttribute(e,t);if(null==r)return n;let s=null!==r&&null!==r.value?r.value:n;return s instanceof Array&&(s=s[0]),"number"==typeof s?s:"string"==typeof s?parseInt(s):n}getAttribute(e,t){const n=e;if(!n||!n.attributes)return null;const r=n.attributes;for(let e of r)if(e.name==t)return e;return null}_getInputs(e,t=undefined){void 0===t&&(t=[]);for(const n of e){const e=this._getInputInfo(n);null!==e&&t.push(e);const r=this.getStruct(n.type);r&&this._getInputs(r.members,t)}return t}_getInputInfo(e){const t=this.getAttribute(e,"location")||this.getAttribute(e,"builtin");if(null!==t){const n=this.getAttribute(e,"interpolation"),r=new oe(e.name,e.type,e,t.name,this._parseInt(t.value));return null!==n&&(r.interpolation=this._parseString(n.value)),r}return null}_parseString(e){return e instanceof Array&&(e=e[0]),e}_parseInt(e){e instanceof Array&&(e=e[0]);const t=parseInt(e);return isNaN(t)?e:t}getStruct(e){if(null===e)return null;if(e instanceof b)return e;e instanceof N&&(e=e.name);for(const t of this.structs)if(t.name==e)return t;return null}getAlias(e){if(null===e)return null;if(e instanceof n){if(!(e instanceof N))return null;e=e.name}for(const t of this.aliases)if(t.name==e)return t.type;return null}getBindGroups(){const e=[];function t(t,n){t>=e.length&&(e.length=t+1),void 0===e[t]&&(e[t]=[]),n>=e[t].length&&(e[t].length=n+1)}for(const n of this.uniforms){t(n.group,n.binding);e[n.group][n.binding]=new ce("buffer",this.getUniformBufferInfo(n))}for(const n of this.storage){t(n.group,n.binding);e[n.group][n.binding]=new ce("storage",this.getStorageBufferInfo(n))}for(const n of this.textures){t(n.group,n.binding);e[n.group][n.binding]=new ce("texture",n)}for(const n of this.samplers){t(n.group,n.binding);e[n.group][n.binding]=new ce("sampler",n)}return e}getStorageBufferInfo(e){if(e instanceof re&&(e=e.node),!this.isStorageVar(e))return null;const t=this.getAttributeNum(e,"group",0),n=this.getAttributeNum(e,"binding",0),r=this._getUniformInfo(e);return r.group=t,r.binding=n,r}getStructInfo(e){var t,n,r,s,o;if(null===e)return null;const i=e instanceof b?e:this.getStruct(e.type);if(!i)return null;let a=0,c=0,_=0,l=0,h=new ue(e.name,e instanceof u?e.type:null);h.members=[];for(let e=0,u=i.members.length;e<u;++e){const u=i.members[e],d=u.name,p=this.getTypeInfo(u);if(!p)continue;const m=u.type,f=p.align,y=p.size;a=this._roundUp(f,a+c),c=y,_=a,l=Math.max(l,f);const g="array"===u.type.astNodeType,k=this.getStruct(m)||(g?this.getStruct(null===(t=m.format)||void 0===t?void 0:t.name):null),w=!!k,x=w?this.getStructInfo(k):void 0,b=(null!==(n=null==x?void 0:x.size)&&void 0!==n?n:g)?null===(r=this.getTypeInfo(m.format))||void 0===r?void 0:r.size:null===(s=this.getTypeInfo(u.type))||void 0===s?void 0:s.size,v=null!==(o=u.type.count)&&void 0!==o?o:0,E=w?null==x?void 0:x.members:void 0,A=new ie;A.node=u,A.name=d,A.offset=a,A.size=y,A.type=m,A.isArray=g,A.arrayCount=v,A.arrayStride=b,A.isStruct=w,A.members=E,h.members.push(A)}return h.size=this._roundUp(l,_+c),h.align=l,h.isArray=!1,h.isStruct=!0,h.arrayCount=0,h}_getUniformInfo(e){var t,n,r,s,o;const i=this.getStructInfo(e);if(null!==i)return i;var a=e;const u=this.getTypeInfo(a.type);if(null===u)return null;const c=new ue(e.name,a.type);c.align=u.align,c.size=u.size;let _=this.getStruct(null===(t=a.type.format)||void 0===t?void 0:t.name),l=_?this.getStructInfo(_):void 0;return c.isArray="array"===a.type.astNodeType,c.isStruct=!!_,c.members=c.isStruct?null==l?void 0:l.members:void 0,c.name=a.name,c.type=a.type,c.arrayStride=(null!==(n=null==l?void 0:l.size)&&void 0!==n?n:c.isArray)?null===(r=this.getTypeInfo(a.type.format))||void 0===r?void 0:r.size:null===(s=this.getTypeInfo(a.type))||void 0===s?void 0:s.size,c.arrayCount=parseInt(null!==(o=a.type.count)&&void 0!==o?o:0),c}getUniformBufferInfo(e){if(!this.isUniformVar(e.node))return null;const t=this._getUniformInfo(e.node);return t.group=e.group,t.binding=e.binding,t}getTypeInfo(e){var t;if(null==e)return null;const n=this.getAttributeNum(e,"size",0),r=this.getAttributeNum(e,"align",0);if(e instanceof Z&&(e=e.type),e instanceof N){const t=this.getAlias(e.name);if(null!==t)e=t;else{const t=this.getStruct(e.name);null!==t&&(e=t)}}{const t=le.typeInfo[e.name];if(void 0!==t){const s="f16"===e.format?2:1;return new ae(Math.max(r,t.align/s),Math.max(n,t.size/s))}}{const t=le.typeInfo[e.name.substring(0,e.name.length-1)];if(t){const s="h"===e.name[e.name.length-1]?2:1;return new ae(Math.max(r,t.align/s),Math.max(n,t.size/s))}}if("array"==e.name){let s=8,o=8;const i=this.getTypeInfo(e.format);null!==i&&(o=i.size,s=i.align);return o=parseInt(null!==(t=e.count)&&void 0!==t?t:1)*this.getAttributeNum(e,"stride",this._roundUp(s,o)),n&&(o=n),new ae(Math.max(r,s),Math.max(n,o))}if(e instanceof b){let t=0,s=0,o=0,i=0,a=0;for(const n of e.members){const e=this.getTypeInfo(n);t=Math.max(e.align,t),o=this._roundUp(e.align,o+i),i=e.size,a=o}return s=this._roundUp(t,a+i),new ae(Math.max(r,t),Math.max(n,s))}return null}_roundUp(e,t){return Math.ceil(t/e)*e}}function he(e,t,n){return t.isArray?t.isStruct?[t.name,new Array(t.arrayCount).fill(0).map(((r,s)=>de(e,t.members,t.size/t.arrayCount,n+(t.offset||0)+t.size/t.arrayCount*s)))]:[t.name,{offset:n+(t.offset||0),size:t.size,type:t.type.format.format?`${t.type.format.name}<${t.type.format.format.name}>`:t.type.format.name,numElements:t.arrayCount}]:t.isStruct?[t.name,de(e,t.members,t.size,n+(t.offset||0))]:[t.name,{offset:n+(t.offset||0),size:t.size,type:t.type?.format?`${t.type.name}<${t.type.format.name}>`:t.type?.name||t.name}]}function de(e,t,n,r=0){return{fields:Object.fromEntries(t.map((t=>he(e,t,r)))),size:n}}function pe(e,t){if(!e)throw new Error(t&&("string"==typeof t?t:t()))}le.typeInfo={f16:{align:2,size:2},i32:{align:4,size:4},u32:{align:4,size:4},f32:{align:4,size:4},atomic:{align:4,size:4},vec2:{align:8,size:8},vec3:{align:16,size:12},vec4:{align:16,size:16},mat2x2:{align:8,size:16},mat3x2:{align:8,size:24},mat4x2:{align:8,size:32},mat2x3:{align:16,size:32},mat3x3:{align:16,size:48},mat4x3:{align:16,size:64},mat2x4:{align:16,size:32},mat3x4:{align:16,size:48},mat4x4:{align:16,size:64}},le.textureTypes=Q.any_texture_type.map((e=>e.name)),le.samplerTypes=Q.sampler_type.map((e=>e.name));const me=[new Uint8Array,new Uint8ClampedArray,new Uint16Array,new Uint32Array,new Int8Array,new Int16Array,new Int32Array,new Float32Array,new Float64Array],fe={...(()=>{const e={};for(const t of me)e[t.constructor.name]=t.constructor;return e})()};function ye(e,{start:t=0,length:n}){if(e instanceof ArrayBuffer)return new Uint8Array(e,t,n);if((e instanceof Uint8Array||e instanceof Uint8ClampedArray)&&0===t&&(void 0===n||n===e.byteLength))return e;const r=e.byteOffset+t*e.BYTES_PER_ELEMENT,s=void 0!==n?n*e.BYTES_PER_ELEMENT:e.byteLength-(r-e.byteOffset);return new Uint8Array(e.buffer,r,s)}function ge(e){return 1<<32-Math.clz32(e-1)}function ke(e,t,n){const r=e.createBuffer({mappedAtCreation:!0,size:(s=t.byteLength,o=4,pe(Number.isInteger(s)&&s>=0,"n must be a non-negative integer"),pe(Number.isInteger(o)&&o>0,"alignment must be a positive integer"),Math.ceil(s/o)*o),usage:n});var s,o,i,a;return i={src:t},ye((a={dst:r.getMappedRange()}).dst,a).set(ye(i.src,i)),r.unmap(),r}function we(e){return`fn _lt(l: ${e}, r: ${e}) -> bool { return l < r; }`}function xe(e,t){return`\n  fn _lt(l: ${e}, r: ${e}) -> bool {\n    for (var i = 0; i < ${t}; i++) {\n      if (l[i] != r[i]) {\n        return l[i] < r[i];\n      }\n    }\n    return false;\n  }`}Object.values(fe);const be={u32:{type:"u32",comp:{code:we("u32"),entryPoint:"_lt"}},i32:{type:"i32",comp:{code:we("i32"),entryPoint:"_lt"}},f32:{type:"f32",comp:{code:we("f32"),entryPoint:"_lt"}},vec2u:{type:"vec2u",comp:{code:xe("vec2u",2),entryPoint:"_lt"}},vec3u:{type:"vec3u",comp:{code:xe("vec3u",3),entryPoint:"_lt"}},vec4u:{type:"vec4u",comp:{code:xe("vec4u",4),entryPoint:"_lt"}},vec2i:{type:"vec2i",comp:{code:xe("vec2i",2),entryPoint:"_lt"}},vec3i:{type:"vec3i",comp:{code:xe("vec3i",3),entryPoint:"_lt"}},vec4i:{type:"vec4i",comp:{code:xe("vec4i",4),entryPoint:"_lt"}},vec2f:{type:"vec2f",comp:{code:xe("vec2f",2),entryPoint:"_lt"}},vec3f:{type:"vec3f",comp:{code:xe("vec3f",3),entryPoint:"_lt"}},vec4f:{type:"vec4f",comp:{code:xe("vec4f",4),entryPoint:"_lt"}}};function ve(e){const t=function(e){const t=new le(e),n=Object.fromEntries(t.structs.map((e=>{const n=t.getStructInfo(e);return[e.name,de(t,n.members,n.size)]}))),r=Object.fromEntries(t.uniforms.map((e=>{const n=t.getUniformBufferInfo(e),r=he(t,n,0)[1];return r.binding=n.binding,r.group=n.group,[e.name,r]})));return{structs:n,storages:Object.fromEntries(t.storage.map((e=>{const n=t.getStorageBufferInfo(e),r=he(t,n,0)[1];return r.binding=n.binding,r.group=n.group,[e.name,r]}))),uniforms:r}}(`\n  ${e.definition?e.definition:""}\n  struct Element {\n    e: ${e.type}\n  };\n  `);return t.structs.Element.size}function Ee(e,t,n,r,s=!0){return`\n  struct Params {\n    h: u32,\n    algorithm: u32\n  };\n  ${e.definition?e.definition:""}\n\n  @group(0) @binding(0) var<storage, read_write> k: array<${e.type}>;\n  ${s?"@group(0) @binding(1) var<storage, read_write> v: array<u32>;":""}\n  @group(1) @binding(0) var<uniform> params: Params;\n\n  var<workgroup> local_k: array<${e.type}, ${2*n}>;\n  ${s?`var<workgroup> local_v: array<u32, ${2*n}>;`:""}\n\n  // Comparison function.\n  ${e.comp.code}\n\n  fn _compare(left: ${e.type}, right: ${e.type}) -> bool {\n    return ${"ascending"===t?"":"!"}${e.comp.entryPoint}(left, right);\n  }\n\n  fn global_compare_and_swap(idx: vec2u) {\n    if (idx.x >= ${r} || idx.y >= ${r}) {\n      return;\n    }\n    if (_compare(k[idx.y], k[idx.x])) {\n      // Always swap the keys.\n      let tmp_k = k[idx.x];\n      k[idx.x] = k[idx.y];\n      k[idx.y] = tmp_k;\n\n      // Conditionally swap the values as well.\n      ${s?"\n      let tmp_v = v[idx.x];\n      v[idx.x] = v[idx.y];\n      v[idx.y] = tmp_v;\n      ":""}\n    }\n  }\n\n  fn local_compare_and_swap(idx: vec2u, offset: u32) {\n    if (offset + idx.x >= ${r} || offset + idx.y >= ${r}) {\n      return;\n    }\n    if (_compare(local_k[idx.y], local_k[idx.x])) {\n      // Always swap the keys.\n      let tmp_k = local_k[idx.x];\n      local_k[idx.x] = local_k[idx.y];\n      local_k[idx.y] = tmp_k;\n\n      // Conditionally swap the values as well.\n      ${s?"\n      let tmp_v = local_v[idx.x];\n      local_v[idx.x] = local_v[idx.y];\n      local_v[idx.y] = tmp_v;\n      ":""}\n    }\n  }\n\n  fn local_init(offset: u32, i: u32) {\n    if (offset + i < ${r}) {\n      local_k[i] = k[offset + i];\n      ${s?"local_v[i] = v[offset + i];":""}\n    }\n  }\n\n  fn local_flush(offset: u32, i: u32) {\n    if (offset + i < ${r}) {\n      k[offset + i] = local_k[i];\n      ${s?"v[offset + i] = local_v[i];":""}\n    }\n  }\n\n  fn big_flip(t_prime: u32, h: u32) {\n    let half_h = h >> 1;\n    let q = ((2 * t_prime) / h) * h;\n    let x = q + (t_prime % half_h);\n    let y = q + h - (t_prime % half_h) - 1;\n\n    global_compare_and_swap(vec2u(x, y));\n  }\n\n  fn big_disperse(t_prime: u32, h: u32) {\n    let half_h = h >> 1;\n    let q = ((2 * t_prime) / h) * h;\n    let x = q + (t_prime % half_h);\n    let y = x + half_h;\n\n    global_compare_and_swap(vec2u(x, y));\n  }\n\n  fn local_flip(t: u32, h: u32, offset: u32) {\n    workgroupBarrier();\n\n    let half_h = h >> 1;\n    let indices =\n      vec2u(h * ((2 * t) / h)) +\n      vec2u(t % half_h, h - 1 - (t % half_h));\n    local_compare_and_swap(indices, offset);\n  }\n\n  fn local_disperse(t: u32, h: u32, offset: u32) {\n    var hh = h;\n    for (; hh > 1; hh /= 2) {\n      workgroupBarrier();\n\n      let half_h = hh >> 1;\n      let indices =\n        vec2u(hh * ((2 * t) / hh)) +\n        vec2u(t % half_h, half_h + (t % half_h));\n      local_compare_and_swap(indices, offset);\n    }\n  }\n\n  fn local_bms(t: u32, h: u32, offset: u32) {\n    for (var hh : u32 = 2; hh <= h; hh *= 2) {\n      local_flip(t, hh, offset);\n      local_disperse(t, hh / 2, offset);\n    }\n  }\n\n  @compute @workgroup_size(${n}) fn main(\n    @builtin(local_invocation_id) local_invocation_id: vec3u,\n    @builtin(global_invocation_id) global_invocation_id: vec3u,\n    @builtin(workgroup_id) workgroup_id: vec3u\n  ) {\n    let t = local_invocation_id.x;\n    let t_prime = global_invocation_id.x;\n    let offset = ${n} * 2 * workgroup_id.x;\n\n    // Initialize workgroup local memory.\n    if (params.algorithm <= 1) {\n      local_init(offset, t * 2);\n      local_init(offset, t * 2 + 1);\n    }\n\n    switch params.algorithm {\n      case 0: {\n        local_bms(t, params.h, offset);\n      }\n      case 1: {\n        local_disperse(t, params.h, offset);\n      }\n      case 2: {\n        big_flip(t_prime, params.h);\n      }\n      case 3: {\n        big_disperse(t_prime, params.h);\n      }\n      default: {}\n    }\n\n    // Copy local memory back to the buffer.\n    if (params.algorithm <= 1) {\n      workgroupBarrier();\n      local_flush(offset, t * 2);\n      local_flush(offset, t * 2 + 1);\n    }\n  }\n  `}function Ae(e,t,n){return`\n  // Declare the custom struct type(s)\n  ${e.dist.distType.definition?e.dist.distType.definition:""}\n  ${e.definition?e.definition:""}\n\n  // Declare the distance mapping function.\n  ${e.dist.code}\n\n  @group(0) @binding(0) var<storage, read> input: array<${e.type}, ${n}>;\n  @group(0) @binding(1) var<storage, read_write> k: array<${e.dist.distType.type}, ${n}>;\n  @group(0) @binding(2) var<storage, read_write> v: array<u32, ${n}>;\n\n  @compute @workgroup_size(${t}) fn main(@builtin(global_invocation_id) i: vec3u) {\n    if (i.x < ${n}) {\n      k[i.x] = ${e.dist.entryPoint}(input[i.x]);\n      v[i.x] = i.x;\n    }\n  }\n  `}function Se(e,t,n,r,s,o){const i=ge(r),a=ve(e),u=n.limits.maxComputeWorkgroupStorageSize/2/ge(a+(o?4:0)),c=Math.min(n.limits.maxComputeWorkgroupSizeX,u,i/2),_=i/(2*c),l=n.createShaderModule({code:Ee(e,t,c,r,!!o)}),h=n.createComputePipeline({layout:"auto",compute:{module:l,entryPoint:"main"}}),d=n.createBindGroup({layout:h.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:s}},...o?[{binding:1,resource:{buffer:o}}]:[]]}),p=[],m=[];let f=(e,t)=>{const r=ke(n,new Uint32Array([e,t]),GPUBufferUsage.UNIFORM);p.push(r);const s=n.createBindGroup({layout:h.getBindGroupLayout(1),entries:[{binding:0,resource:{buffer:r}}]});m.push(s)},y=e=>{f(e,1)},g=e=>{f(e,2)},k=e=>{f(e,3)},w=2*c;for((e=>{f(e,0)})(w),w*=2;w<=i;w*=2){g(w);for(var x=w/2;x>1;x/=2)x<=_?y(x):k(x)}return{computePipeline:h,workGroupCount:_,bindGroupKV:d,bindGroupPs:m,paramBuffers:p}}e.SortInPlaceElementType=be,e.createInPlaceSorter=function(e){var n,r;return new(r=class{constructor(){n.set(this,Se(e.type,e.mode??"ascending",e.device,e.n,e.buffer))}encode(e){const r=e.beginComputePass();r.setPipeline(t(this,n,"f").computePipeline),r.setBindGroup(0,t(this,n,"f").bindGroupKV),t(this,n,"f").bindGroupPs.forEach((e=>{r.setBindGroup(1,e),r.dispatchWorkgroups(t(this,n,"f").workGroupCount)})),r.end()}sort(){const t=e.device.createCommandEncoder();this.encode(t),e.device.queue.submit([t.finish()])}destroy(){t(this,n,"f").paramBuffers.forEach((e=>e.destroy()))}},n=new WeakMap,r)},e.createIndexSorter=function(e){var n,r,s;return new(s=class{constructor(){n.set(this,function(e,t,n,r,s,o){const i=ge(n),a=Math.min(t.limits.maxComputeWorkgroupSizeX,i),u=i/a,c=t.createShaderModule({code:Ae(e,a,n)}),_=t.createComputePipeline({layout:"auto",compute:{module:c,entryPoint:"main"}}),l=s??t.createBuffer({size:4*n,usage:r.usage}),h=o??t.createBuffer({size:4*n,usage:r.usage}),d=t.createBindGroup({layout:_.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:r}},{binding:1,resource:{buffer:l}},{binding:2,resource:{buffer:h}}]});return{computePipeline:_,workGroupCount:u,bindGroup:d,k:s?void 0:l,v:o?void 0:h}}(e.type,e.device,e.n,e.buffer,e.k,e.v)),r.set(this,Se(e.type.dist.distType,e.mode??"ascending",e.device,e.n,e.k??t(this,n,"f").k,e.v??t(this,n,"f").v))}encode(e){{const r=e.beginComputePass();r.setPipeline(t(this,n,"f").computePipeline),r.setBindGroup(0,t(this,n,"f").bindGroup),r.dispatchWorkgroups(t(this,n,"f").workGroupCount),r.end()}{const n=e.beginComputePass();n.setPipeline(t(this,r,"f").computePipeline),n.setBindGroup(0,t(this,r,"f").bindGroupKV),t(this,r,"f").bindGroupPs.forEach((e=>{n.setBindGroup(1,e),n.dispatchWorkgroups(t(this,r,"f").workGroupCount)})),n.end()}}sort(){const r=e.device.createCommandEncoder();return this.encode(r),e.device.queue.submit([r.finish()]),e.v??t(this,n,"f").v}destroy(){t(this,n,"f").k?.destroy(),t(this,n,"f").v?.destroy(),t(this,r,"f").paramBuffers.forEach((e=>e.destroy()))}},n=new WeakMap,r=new WeakMap,s)}}));
//# sourceMappingURL=sort.min.js.map
